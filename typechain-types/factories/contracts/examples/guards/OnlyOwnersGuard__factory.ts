/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  OnlyOwnersGuard,
  OnlyOwnersGuardInterface,
} from "../../../../contracts/examples/guards/OnlyOwnersGuard";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "checkAfterExecution",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "checkTransaction",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061086b806100206000396000f3fe608060405234801561001057600080fd5b50600436106100455760003560e01c806301ffc9a71461004857806375f0bb5214610078578063932713681461009457610046565b5b005b610062600480360381019061005d91906102b8565b6100b0565b60405161006f9190610300565b60405180910390f35b610092600480360381019061008d9190610558565b610182565b005b6100ae60048036038101906100a991906106e6565b610248565b005b60007fe6d7a83a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061017b57507f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b3373ffffffffffffffffffffffffffffffffffffffff16632f54bf6e826040518263ffffffff1660e01b81526004016101bb9190610735565b602060405180830381865afa1580156101d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101fc9190610765565b61023b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023290610815565b60405180910390fd5b5050505050505050505050565b5050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61029581610260565b81146102a057600080fd5b50565b6000813590506102b28161028c565b92915050565b6000602082840312156102ce576102cd610256565b5b60006102dc848285016102a3565b91505092915050565b60008115159050919050565b6102fa816102e5565b82525050565b600060208201905061031560008301846102f1565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103468261031b565b9050919050565b6103568161033b565b811461036157600080fd5b50565b6000813590506103738161034d565b92915050565b6000819050919050565b61038c81610379565b811461039757600080fd5b50565b6000813590506103a981610383565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610402826103b9565b810181811067ffffffffffffffff82111715610421576104206103ca565b5b80604052505050565b600061043461024c565b905061044082826103f9565b919050565b600067ffffffffffffffff8211156104605761045f6103ca565b5b610469826103b9565b9050602081019050919050565b82818337600083830152505050565b600061049861049384610445565b61042a565b9050828152602081018484840111156104b4576104b36103b4565b5b6104bf848285610476565b509392505050565b600082601f8301126104dc576104db6103af565b5b81356104ec848260208601610485565b91505092915050565b6002811061050257600080fd5b50565b600081359050610514816104f5565b92915050565b60006105258261031b565b9050919050565b6105358161051a565b811461054057600080fd5b50565b6000813590506105528161052c565b92915050565b60008060008060008060008060008060006101608c8e03121561057e5761057d610256565b5b600061058c8e828f01610364565b9b5050602061059d8e828f0161039a565b9a505060408c013567ffffffffffffffff8111156105be576105bd61025b565b5b6105ca8e828f016104c7565b99505060606105db8e828f01610505565b98505060806105ec8e828f0161039a565b97505060a06105fd8e828f0161039a565b96505060c061060e8e828f0161039a565b95505060e061061f8e828f01610364565b9450506101006106318e828f01610543565b9350506101208c013567ffffffffffffffff8111156106535761065261025b565b5b61065f8e828f016104c7565b9250506101406106718e828f01610364565b9150509295989b509295989b9093969950565b6000819050919050565b61069781610684565b81146106a257600080fd5b50565b6000813590506106b48161068e565b92915050565b6106c3816102e5565b81146106ce57600080fd5b50565b6000813590506106e0816106ba565b92915050565b600080604083850312156106fd576106fc610256565b5b600061070b858286016106a5565b925050602061071c858286016106d1565b9150509250929050565b61072f8161033b565b82525050565b600060208201905061074a6000830184610726565b92915050565b60008151905061075f816106ba565b92915050565b60006020828403121561077b5761077a610256565b5b600061078984828501610750565b91505092915050565b600082825260208201905092915050565b7f6d73672073656e646572206973206e6f7420616c6c6f77656420746f2065786560008201527f6300000000000000000000000000000000000000000000000000000000000000602082015250565b60006107ff602183610792565b915061080a826107a3565b604082019050919050565b6000602082019050818103600083015261082e816107f2565b905091905056fea2646970667358221220703eabbd823bb7a8fb74059a93a2f3387ea0c9d9dd8b3dd480d03b51b21c258764736f6c63430008180033";

type OnlyOwnersGuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OnlyOwnersGuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OnlyOwnersGuard__factory extends ContractFactory {
  constructor(...args: OnlyOwnersGuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OnlyOwnersGuard & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OnlyOwnersGuard__factory {
    return super.connect(runner) as OnlyOwnersGuard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OnlyOwnersGuardInterface {
    return new Interface(_abi) as OnlyOwnersGuardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OnlyOwnersGuard {
    return new Contract(address, _abi, runner) as unknown as OnlyOwnersGuard;
  }
}

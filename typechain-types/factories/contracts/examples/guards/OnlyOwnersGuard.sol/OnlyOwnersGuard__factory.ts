/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../../common";
import type {
  OnlyOwnersGuard,
  OnlyOwnersGuardInterface,
} from "../../../../../contracts/examples/guards/OnlyOwnersGuard.sol/OnlyOwnersGuard";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "nonpayable",
    type: "fallback",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    name: "checkAfterExecution",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "checkModuleTransaction",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address payable",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
      {
        internalType: "address",
        name: "msgSender",
        type: "address",
      },
    ],
    name: "checkTransaction",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461001657610372908161001c8239f35b600080fdfe6080604081815260049182361015610021575b5050503461001c57005b600080fd5b600092833560e01c91826301ffc9a71461024457508163728c2972146101e257816375f0bb5214610081575063932713681461005d5780610012565b3461007d5736600319011261007a576024358015150361007a5780f35b80fd5b5080fd5b919050346101de576101603660031901126101de5761009e610297565b5067ffffffffffffffff6044358181116101da576100bf90369085016102e5565b50600260643510156101c4576001600160a01b039060e435828116036101da5761010435828116036101da57610124359081116101da5761010390369085016102e5565b50610144359081168091036101c4578151906317aa5fb760e11b825283820152602081602481335afa9081156101d0578491610191575b5015610144578280f35b906020608492519162461bcd60e51b8352820152602160248201527f6d73672073656e646572206973206e6f7420616c6c6f77656420746f206578656044820152606360f81b6064820152fd5b90506020813d6020116101c8575b816101ac602093836102ad565b810103126101c4575180151581036101c4573861013a565b8380fd5b3d915061019f565b82513d86823e3d90fd5b8480fd5b8280fd5b9050346101de5760a03660031901126101de576101fd610297565b506044359067ffffffffffffffff82116101c45761021d913691016102e5565b506002606435101561007d576084356001600160a01b0381160361007d5751908152602090f35b8491346101de5760203660031901126101de573563ffffffff60e01b81168091036101de576020925063128b702960e31b8114908115610286575b5015158152f35b6301ffc9a760e01b1490508361027f565b600435906001600160a01b038216820361001c57565b90601f8019910116810190811067ffffffffffffffff8211176102cf57604052565b634e487b7160e01b600052604160045260246000fd5b81601f8201121561001c5780359067ffffffffffffffff82116102cf576040519261031a601f8401601f1916602001856102ad565b8284526020838301011161001c5781600092602080930183860137830101529056fea2646970667358221220ee68df14ede9cb452f14109059bfc46884175f4f66f150374eba048f618e990b64736f6c63430008170033";

type OnlyOwnersGuardConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: OnlyOwnersGuardConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class OnlyOwnersGuard__factory extends ContractFactory {
  constructor(...args: OnlyOwnersGuardConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      OnlyOwnersGuard & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): OnlyOwnersGuard__factory {
    return super.connect(runner) as OnlyOwnersGuard__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OnlyOwnersGuardInterface {
    return new Interface(_abi) as OnlyOwnersGuardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): OnlyOwnersGuard {
    return new Contract(address, _abi, runner) as unknown as OnlyOwnersGuard;
  }
}

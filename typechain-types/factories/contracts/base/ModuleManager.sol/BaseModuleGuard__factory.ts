/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  BaseModuleGuard,
  BaseModuleGuardInterface,
} from "../../../../contracts/base/ModuleManager.sol/BaseModuleGuard";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "txHash",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "success",
        type: "bool",
      },
    ],
    name: "checkAfterModuleExecution",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "enum Enum.Operation",
        name: "operation",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "module",
        type: "address",
      },
    ],
    name: "checkModuleTransaction",
    outputs: [
      {
        internalType: "bytes32",
        name: "moduleTxHash",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class BaseModuleGuard__factory {
  static readonly abi = _abi;
  static createInterface(): BaseModuleGuardInterface {
    return new Interface(_abi) as BaseModuleGuardInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BaseModuleGuard {
    return new Contract(address, _abi, runner) as unknown as BaseModuleGuard;
  }
}

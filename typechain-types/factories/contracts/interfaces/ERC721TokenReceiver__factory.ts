/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ERC721TokenReceiver,
  ERC721TokenReceiverInterface,
} from "../../../contracts/interfaces/ERC721TokenReceiver";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ERC721TokenReceiver__factory {
  static readonly abi = _abi;
  static createInterface(): ERC721TokenReceiverInterface {
    return new Interface(_abi) as ERC721TokenReceiverInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC721TokenReceiver {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ERC721TokenReceiver;
  }
}

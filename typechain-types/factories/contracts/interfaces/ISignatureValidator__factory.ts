/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ISignatureValidator,
  ISignatureValidatorInterface,
} from "../../../contracts/interfaces/ISignatureValidator";

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_hash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_signature",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

export class ISignatureValidator__factory {
  static readonly abi = _abi;
  static createInterface(): ISignatureValidatorInterface {
    return new Interface(_abi) as ISignatureValidatorInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ISignatureValidator {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ISignatureValidator;
  }
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  ERC777TokensRecipient,
  ERC777TokensRecipientInterface,
} from "../../../contracts/interfaces/ERC777TokensRecipient";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
      {
        internalType: "bytes",
        name: "operatorData",
        type: "bytes",
      },
    ],
    name: "tokensReceived",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

export class ERC777TokensRecipient__factory {
  static readonly abi = _abi;
  static createInterface(): ERC777TokensRecipientInterface {
    return new Interface(_abi) as ERC777TokensRecipientInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC777TokensRecipient {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as ERC777TokensRecipient;
  }
}

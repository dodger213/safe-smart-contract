/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Safe150Migration,
  Safe150MigrationInterface,
} from "../../../contracts/libraries/Safe150Migration";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "singleton",
        type: "address",
      },
    ],
    name: "ChangedMasterCopy",
    type: "event",
  },
  {
    inputs: [],
    name: "SAFE_150_FALLBACK_HANDLER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SAFE_150_SINGLETON",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SAFE_150_SINGLETON_L2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "migrateL2Singleton",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrateL2WithFallbackHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrateSingleton",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrateWithFallbackHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061003473477c3fb2d564349e2f95a2ef1091bf9657b2614561013c60201b60201c565b610073576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006a906101d2565b60405180910390fd5b61009673551a2f9a71bf88cdbef3cbe60e95722f38ee0eaa61013c60201b60201c565b6100d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100cc90610264565b60405180910390fd5b6100f8734c95c836d31d329d80d696cb679f3dea028ad4e561013c60201b60201c565b610137576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012e906102f6565b60405180910390fd5b610316565b600080823b905060008111915050919050565b600082825260208201905092915050565b7f5361666520312e342e312053696e676c65746f6e206973206e6f74206465706c60008201527f6f79656400000000000000000000000000000000000000000000000000000000602082015250565b60006101bc60248361014f565b91506101c782610160565b604082019050919050565b600060208201905081810360008301526101eb816101af565b9050919050565b7f5361666520312e342e312053696e676c65746f6e20284c3229206973206e6f7460008201527f206465706c6f7965640000000000000000000000000000000000000000000000602082015250565b600061024e60298361014f565b9150610259826101f2565b604082019050919050565b6000602082019050818103600083015261027d81610241565b9050919050565b7f5361666520312e342e312046616c6c6261636b2048616e646c6572206973206e60008201527f6f74206465706c6f796564000000000000000000000000000000000000000000602082015250565b60006102e0602b8361014f565b91506102eb82610284565b604082019050919050565b6000602082019050818103600083015261030f816102d3565b9050919050565b61058a806103256000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806368cb3d941161005b57806368cb3d94146100c8578063a5e2eedc146100d2578063ed007fc6146100f0578063f6682ab0146100fa5761007d565b806307f464a4146100825780630db9ceab1461008c5780631e98bdc9146100aa575b600080fd5b61008a610104565b005b6100946101b9565b6040516100a19190610496565b60405180910390f35b6100b26101d1565b6040516100bf9190610496565b60405180910390f35b6100d06101e9565b005b6100da61027a565b6040516100e79190610496565b60405180910390f35b6100f8610292565b005b610102610323565b005b61010c6103d8565b73551a2f9a71bf88cdbef3cbe60e95722f38ee0eaa6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516101af9190610496565b60405180910390a1565b73551a2f9a71bf88cdbef3cbe60e95722f38ee0eaa81565b734c95c836d31d329d80d696cb679f3dea028ad4e581565b6101f16103d8565b6101f9610104565b3073ffffffffffffffffffffffffffffffffffffffff1663f08a0323734c95c836d31d329d80d696cb679f3dea028ad4e56040518263ffffffff1660e01b81526004016102469190610496565b600060405180830381600087803b15801561026057600080fd5b505af1158015610274573d6000803e3d6000fd5b50505050565b73477c3fb2d564349e2f95a2ef1091bf9657b2614581565b61029a6103d8565b6102a2610323565b3073ffffffffffffffffffffffffffffffffffffffff1663f08a0323734c95c836d31d329d80d696cb679f3dea028ad4e56040518263ffffffff1660e01b81526004016102ef9190610496565b600060405180830381600087803b15801561030957600080fd5b505af115801561031d573d6000803e3d6000fd5b50505050565b61032b6103d8565b73477c3fb2d564349e2f95a2ef1091bf9657b261456000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516103ce9190610496565b60405180910390a1565b61040160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610442565b610440576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043790610534565b60405180910390fd5b565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061048082610455565b9050919050565b61049081610475565b82525050565b60006020820190506104ab6000830184610487565b92915050565b600082825260208201905092915050565b7f547279696e6720746f206d69677261746520616e20696e76616c69642053616660008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b600061051e6021836104b1565b9150610529826104c2565b604082019050919050565b6000602082019050818103600083015261054d81610511565b905091905056fea26469706673582212205954036e861a354927b4b4e185251e625a36a71e9ffadfad811993d0371c356764736f6c63430008180033";

type Safe150MigrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Safe150MigrationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Safe150Migration__factory extends ContractFactory {
  constructor(...args: Safe150MigrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Safe150Migration & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Safe150Migration__factory {
    return super.connect(runner) as Safe150Migration__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Safe150MigrationInterface {
    return new Interface(_abi) as Safe150MigrationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Safe150Migration {
    return new Contract(address, _abi, runner) as unknown as Safe150Migration;
  }
}

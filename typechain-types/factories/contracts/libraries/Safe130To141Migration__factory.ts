/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  Safe130To141Migration,
  Safe130To141MigrationInterface,
} from "../../../contracts/libraries/Safe130To141Migration";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "singleton",
        type: "address",
      },
    ],
    name: "ChangedMasterCopy",
    type: "event",
  },
  {
    inputs: [],
    name: "SAFE_141_FALLBACK_HANDLER",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SAFE_141_SINGLETON",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SAFE_141_SINGLETON_L2",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "migrate",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrateL2",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrateL2WithFallbackHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "migrateWithFallbackHandler",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b506100347341675c099f32341bf84bfc5382af534df5c7461a61013c60201b60201c565b610073576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161006a906101d2565b60405180910390fd5b6100967329fcb43b46531bca003ddc8fcb67ffe91900c76261013c60201b60201c565b6100d5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100cc90610264565b60405180910390fd5b6100f873fd0732dc9e303f09fcef3a7388ad10a83459ec9961013c60201b60201c565b610137576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161012e906102f6565b60405180910390fd5b610316565b600080823b905060008111915050919050565b600082825260208201905092915050565b7f5361666520312e342e312053696e676c65746f6e206973206e6f74206465706c60008201527f6f79656400000000000000000000000000000000000000000000000000000000602082015250565b60006101bc60248361014f565b91506101c782610160565b604082019050919050565b600060208201905081810360008301526101eb816101af565b9050919050565b7f5361666520312e342e312053696e676c65746f6e20284c3229206973206e6f7460008201527f206465706c6f7965640000000000000000000000000000000000000000000000602082015250565b600061024e60298361014f565b9150610259826101f2565b604082019050919050565b6000602082019050818103600083015261027d81610241565b9050919050565b7f5361666520312e342e312046616c6c6261636b2048616e646c6572206973206e60008201527f6f74206465706c6f796564000000000000000000000000000000000000000000602082015250565b60006102e0602b8361014f565b91506102eb82610284565b604082019050919050565b6000602082019050818103600083015261030f816102d3565b9050919050565b610554806103256000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638fd3ab801161005b5780638fd3ab80146100c857806392b501b7146100d2578063ed007fc6146100f0578063fdd09756146100fa5761007d565b80636253390f1461008257806368cb3d94146100a05780636ca63244146100aa575b600080fd5b61008a610104565b6040516100979190610486565b60405180910390f35b6100a861011c565b005b6100b26101a5565b6040516100bf9190610486565b60405180910390f35b6100d06101bd565b005b6100da610272565b6040516100e79190610486565b60405180910390f35b6100f861028a565b005b610102610313565b005b7341675c099f32341bf84bfc5382af534df5c7461a81565b610124610313565b3073ffffffffffffffffffffffffffffffffffffffff1663f08a032373fd0732dc9e303f09fcef3a7388ad10a83459ec996040518263ffffffff1660e01b81526004016101719190610486565b600060405180830381600087803b15801561018b57600080fd5b505af115801561019f573d6000803e3d6000fd5b50505050565b7329fcb43b46531bca003ddc8fcb67ffe91900c76281565b6101c56103c8565b7341675c099f32341bf84bfc5382af534df5c7461a6000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516102689190610486565b60405180910390a1565b73fd0732dc9e303f09fcef3a7388ad10a83459ec9981565b6102926101bd565b3073ffffffffffffffffffffffffffffffffffffffff1663f08a032373fd0732dc9e303f09fcef3a7388ad10a83459ec996040518263ffffffff1660e01b81526004016102df9190610486565b600060405180830381600087803b1580156102f957600080fd5b505af115801561030d573d6000803e3d6000fd5b50505050565b61031b6103c8565b7329fcb43b46531bca003ddc8fcb67ffe91900c7626000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f75e41bc35ff1bf14d81d1d2f649c0084a0f974f9289c803ec9898eeec4c8d0b860008054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040516103be9190610486565b60405180910390a1565b6103f160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610432565b610430576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610427906104fe565b60405180910390fd5b565b600080823b905060008111915050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061047082610445565b9050919050565b61048081610465565b82525050565b600060208201905061049b6000830184610477565b92915050565b600082825260208201905092915050565b7f556e737570706f727465642070726f787920636f6e7472616374000000000000600082015250565b60006104e8601a836104a1565b91506104f3826104b2565b602082019050919050565b60006020820190508181036000830152610517816104db565b905091905056fea264697066735822122063fae9eafc1358fbaa9af78bf171a991ff559b5903b06ded5169db9eb3edd35464736f6c63430008180033";

type Safe130To141MigrationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Safe130To141MigrationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Safe130To141Migration__factory extends ContractFactory {
  constructor(...args: Safe130To141MigrationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Safe130To141Migration & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(
    runner: ContractRunner | null
  ): Safe130To141Migration__factory {
    return super.connect(runner) as Safe130To141Migration__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Safe130To141MigrationInterface {
    return new Interface(_abi) as Safe130To141MigrationInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Safe130To141Migration {
    return new Contract(
      address,
      _abi,
      runner
    ) as unknown as Safe130To141Migration;
  }
}

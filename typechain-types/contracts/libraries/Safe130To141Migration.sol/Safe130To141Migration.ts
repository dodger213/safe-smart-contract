/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../../common";

export interface Safe130To141MigrationInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "SAFE_141_FALLBACK_HANDLER"
      | "SAFE_141_SINGLETON"
      | "SAFE_141_SINGLETON_L2"
      | "migrate"
      | "migrateL2"
      | "migrateL2WithFallbackHandler"
      | "migrateWithFallbackHandler"
  ): FunctionFragment;

  getEvent(nameOrSignatureOrTopic: "ChangedMasterCopy"): EventFragment;

  encodeFunctionData(
    functionFragment: "SAFE_141_FALLBACK_HANDLER",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SAFE_141_SINGLETON",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "SAFE_141_SINGLETON_L2",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "migrate", values?: undefined): string;
  encodeFunctionData(functionFragment: "migrateL2", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "migrateL2WithFallbackHandler",
    values?: undefined
  ): string;
  encodeFunctionData(
    functionFragment: "migrateWithFallbackHandler",
    values?: undefined
  ): string;

  decodeFunctionResult(
    functionFragment: "SAFE_141_FALLBACK_HANDLER",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SAFE_141_SINGLETON",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "SAFE_141_SINGLETON_L2",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "migrate", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "migrateL2", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "migrateL2WithFallbackHandler",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "migrateWithFallbackHandler",
    data: BytesLike
  ): Result;
}

export namespace ChangedMasterCopyEvent {
  export type InputTuple = [singleton: AddressLike];
  export type OutputTuple = [singleton: string];
  export interface OutputObject {
    singleton: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface Safe130To141Migration extends BaseContract {
  connect(runner?: ContractRunner | null): Safe130To141Migration;
  waitForDeployment(): Promise<this>;

  interface: Safe130To141MigrationInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  SAFE_141_FALLBACK_HANDLER: TypedContractMethod<[], [string], "view">;

  SAFE_141_SINGLETON: TypedContractMethod<[], [string], "view">;

  SAFE_141_SINGLETON_L2: TypedContractMethod<[], [string], "view">;

  migrate: TypedContractMethod<[], [void], "nonpayable">;

  migrateL2: TypedContractMethod<[], [void], "nonpayable">;

  migrateL2WithFallbackHandler: TypedContractMethod<[], [void], "nonpayable">;

  migrateWithFallbackHandler: TypedContractMethod<[], [void], "nonpayable">;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "SAFE_141_FALLBACK_HANDLER"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "SAFE_141_SINGLETON"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "SAFE_141_SINGLETON_L2"
  ): TypedContractMethod<[], [string], "view">;
  getFunction(
    nameOrSignature: "migrate"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "migrateL2"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "migrateL2WithFallbackHandler"
  ): TypedContractMethod<[], [void], "nonpayable">;
  getFunction(
    nameOrSignature: "migrateWithFallbackHandler"
  ): TypedContractMethod<[], [void], "nonpayable">;

  getEvent(
    key: "ChangedMasterCopy"
  ): TypedContractEvent<
    ChangedMasterCopyEvent.InputTuple,
    ChangedMasterCopyEvent.OutputTuple,
    ChangedMasterCopyEvent.OutputObject
  >;

  filters: {
    "ChangedMasterCopy(address)": TypedContractEvent<
      ChangedMasterCopyEvent.InputTuple,
      ChangedMasterCopyEvent.OutputTuple,
      ChangedMasterCopyEvent.OutputObject
    >;
    ChangedMasterCopy: TypedContractEvent<
      ChangedMasterCopyEvent.InputTuple,
      ChangedMasterCopyEvent.OutputTuple,
      ChangedMasterCopyEvent.OutputObject
    >;
  };
}
